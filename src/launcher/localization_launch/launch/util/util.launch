<?xml version="1.0"?>
<launch>

  <!-- Topics -->
  <arg name="input_sensor_points_topic" default="/sensing/lidar/pointcloud" doc="Sensor points topic"/>
  <arg name="output_mesurement_range_sensor_points_topic" default="mesurement_range/pointcloud" doc="Sensor points topic"/>
  <arg name="output_downsample_sensor_points_topic" default="downsample/pointcloud" doc="Sensor points topic"/>

  <!-- frame_ids -->
  <arg name="base_frame" default="base_link" doc="Vehicle reference frame" />

  <!-- pose_initializer -->
  <include file="$(find pose_initializer)/launch/pose_initializer.launch">
    <arg name="ndt_align_server_name" default="/localization/pose_estimator/ndt_align_srv" />
  </include>

  <node pkg="pointcloud_preprocessor" type="crop_box_filter_node" name="crop_box_filter_mesurement_range" output="log">
    <remap from="~input" to="$(arg input_sensor_points_topic)" />
    <remap from="~output" to="$(arg output_mesurement_range_sensor_points_topic)" />
    <rosparam>
        min_x: -60.0
        max_x: 60.0
        min_y: -60.0
        max_y: 60.0
        min_z: -30.0
        max_z: 50.0
        negative: False
    </rosparam>
    <param name="input_frame" value="$(arg base_frame)" />
    <param name="output_frame" value="$(arg base_frame)" />
  </node>


  <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
  <node pkg="pointcloud_preprocessor" type="voxel_grid_downsample_filter_node" name="voxel_grid_filter" output="log">
    <remap from="~input" to="$(arg output_mesurement_range_sensor_points_topic)" />
    <remap from="~output" to="$(arg output_downsample_sensor_points_topic)" />
    <rosparam>
      voxel_size_x: 3.0
      voxel_size_y: 3.0
      voxel_size_z: 3.0
    </rosparam>
  </node>

</launch>
