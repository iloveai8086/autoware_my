<launch>
  <arg name="model" default="model_16" />

  <arg if="$(eval model=='model_16')" name="trained_engine_file" default="$(find lidar_apollo_instance_segmentation)/data/vlp-16.engine" />
  <arg if="$(eval model=='model_16')" name="trained_prototxt_file" default="$(find lidar_apollo_instance_segmentation)/data/vlp-16.prototxt" />
  <arg if="$(eval model=='model_16')" name="trained_caffemodel_file" default="$(find lidar_apollo_instance_segmentation)/data/vlp-16.caffemodel" />

  <!--arg if="$(eval model=='model_64')" name="trained_engine_file" default="$(find lidar_apollo_instance_segmentation)/data/hdl-64.engine"-->
  <arg if="$(eval model=='model_64')" name="trained_engine_file" default="$(find lidar_apollo_instance_segmentation)/data/hdl-64.engine" />
  <arg if="$(eval model=='model_64')" name="trained_prototxt_file" default="$(find lidar_apollo_instance_segmentation)/data/hdl-64.prototxt" />
  <arg if="$(eval model=='model_64')" name="trained_caffemodel_file" default="$(find lidar_apollo_instance_segmentation)/data/hdl-64.caffemodel" />

  <arg if="$(eval model=='model_128')" name="trained_engine_file" default="$(find lidar_apollo_instance_segmentation)/data/vls-128.engine" />
  <arg if="$(eval model=='model_128')" name="trained_prototxt_file" default="$(find lidar_apollo_instance_segmentation)/data/vls-128.prototxt" />
  <arg if="$(eval model=='model_128')" name="trained_caffemodel_file" default="$(find lidar_apollo_instance_segmentation)/data/vls-128.caffemodel" />

  <node pkg="lidar_apollo_instance_segmentation" type="lidar_apollo_instance_segmentation_node"
        name="lidar_apollo_instance_segmentation" output="screen" >
    <remap from="~input/pointcloud" to="/points_raw"/>
	<!--每一个launch文件必须以此开始和结束/sensing/lidar/no_ground/pointcloud       /combine   /points_raw-->
    <remap from="~output/labeled_clusters" to="labeled_clusters"/>    
    <rosparam if="$(eval model=='model_16')" subst_value="true">
      engine_file: $(arg trained_engine_file)
      prototxt_file: $(arg trained_prototxt_file)
      caffemodel_file: $(arg trained_caffemodel_file)
      score_threshold: 0.3
      range: 70
      width: 672
      height: 672
      use_intensity_feature: true
      use_constant_feature: false
    </rosparam>

    <rosparam if="$(eval model=='model_64')" subst_value="true">
      engine_file: $(arg trained_engine_file)
      prototxt_file: $(arg trained_prototxt_file)
      caffemodel_file: $(arg trained_caffemodel_file)
      score_threshold: 0.1
      range: 70
      width: 672
      height: 672
      use_intensity_feature: true
      use_constant_feature: false
    </rosparam>

    <rosparam if="$(eval model=='model_128')" subst_value="true">
      engine_file: $(arg trained_engine_file)
      prototxt_file: $(arg trained_prototxt_file)
      caffemodel_file: $(arg trained_caffemodel_file)
      score_threshold: 0.1
      range: 90
      width: 864
      height: 864
      use_intensity_feature: false
      use_constant_feature: false
    </rosparam>
  </node>
</launch>
